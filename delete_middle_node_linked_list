#!/usr/bin/env python3

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:

    
        pointer = head
        counter = 1

        while pointer.next:
            counter += 1
            pointer = pointer.next

        mid = counter//2 +1 if counter % 2 else counter//2 
            
        p1, p2 = head, head

        for _ in range(mid):
            p2 = p2.next

        if not p2:
            return head.next

        while p2.next:
            p1 = p1.next
            p2 = p2.next
        p1.next = p1.next.next

        return head

        
