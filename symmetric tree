#!/usr/bin/env python3

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -> bool:
        
        def sym(l, r):
            if l is None and r is None: #error using =='null'
                return True
            if l is None or r is None:
                return False
            if l.val != r.val:
                return False
            return sym(l.left, r.right) and sym(l.right, r.left)  

        if root is None:
            return True  # if start with nothing: symmetric
        else:
            return sym(root.left, root.right)  # recursuve until no more vals

    
