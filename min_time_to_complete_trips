#!/usr/bin/env python3

class Solution:
    def minimumTime(self, time: List[int], totalTrips: int) -> int:

        # init given time boundaries
        l, r = min(time), min(time) * totalTrips 

        def given_time(left, right):
            return (left + right) // 2  # midpoint
        
        def enoughTime(given_time):
            trips = 0
            for bus in time:
                trips += given_time // bus
            return trips >= totalTrips # True if enough time
                
        # binary search. finished when l,r converge
        while l < r:
            mid = given_time(l,r)
            if enoughTime(mid):
                r = mid
            else:
                l = mid +1
        return l
        


        
        


        
