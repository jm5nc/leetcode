#!/usr/bin/env python3

class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:

        """
        ls = []
        for i in range(len(nums)):
            for j in range(i+1,len(nums)):
                if nums[i] + nums[j] == target:
                    ls.append(i)
                    ls.append(j)
                    break
        return ls
        """
        # Runtime 4036 ms Beats 14.54%
        # Memory 14.8 MB Beats 99.74%

        
        """
        for i in range(len(nums)):
            for j in range(i+1,len(nums)):
                if nums[i] + nums[j] == target:
                    return i,j
        """

        # Runtime 3648 ms Beats 28.27%
        # Memory 15 MB Beats 69.59%


        hashmap = {} # only 2 iterations; O(n) rather than O(n^2)
        for i in range(len(nums)):
            hashmap[nums[i]] = i  
        for i in range(len(nums)):
            compliment = target - nums[i]
            if compliment in hashmap and hashmap[compliment] != i:
                return i, hashmap[compliment]

        # Runtime 56 ms Beats 94.68%
        # Memory 15 MB Beats 58.41%



        

